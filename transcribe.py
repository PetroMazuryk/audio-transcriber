import os
import whisper

# –®–ª—è—Ö –¥–æ –∞—É–¥—ñ–æ—Ñ–∞–π–ª—É
AUDIO_FILE_PATH = r"E:\Python\audio-transcriber\R20230701-141838G.wav"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä—é–≤–∞–Ω–∏—Ö —Ä—è–¥–∫—ñ–≤
def remove_repetitions(text):
    lines = text.split("\n")
    cleaned = []
    for line in lines:
        stripped = line.strip()
        if stripped and (not cleaned or stripped != cleaned[-1].strip()):
            cleaned.append(line)
    return "\n".join(cleaned)

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è
def transcribe_audio(file_path, output_file="transcription.txt"):
    try:
        print("–ü–æ—Ç–æ—á–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è:", os.getcwd())
        print(f"–ü–µ—Ä–µ–¥–∞—é –Ω–∞ —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è —Ñ–∞–π–ª: {file_path}")

        if not os.path.exists(file_path):
            print(f"‚ÄºÔ∏è –ü–æ–º–∏–ª–∫–∞: –§–∞–π–ª '{file_path}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
            return

        model = whisper.load_model("small")
        result = model.transcribe(file_path, language="uk")

        segments = result["segments"]
        text = "\n".join([seg["text"] for seg in segments])
        cleaned_text = remove_repetitions(text)

        with open(output_file, "w", encoding="utf-8") as f:
            f.write(cleaned_text)

        print(f"‚úÖ –†–æ–∑–ø—ñ–∑–Ω–∞–Ω–∏–π —Ç–µ–∫—Å—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É —Ñ–∞–π–ª: {output_file}")
        return cleaned_text

    except Exception as e:
        print(f"‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}")

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É
if __name__ == "__main__":
    transcribed_text = transcribe_audio(AUDIO_FILE_PATH)
    if transcribed_text:
        print("\nüìù –†–æ–∑–ø—ñ–∑–Ω–∞–Ω–∏–π —Ç–µ–∫—Å—Ç:")
        print(transcribed_text)
