import os
import whisper

print("–ü–æ—Ç–æ—á–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è:", os.getcwd())

def transcribe_audio(file_path, output_file="transcription.txt"):
    try:
        print(f"–ü–µ—Ä–µ–¥–∞—é –Ω–∞ —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è —Ñ–∞–π–ª: {file_path}")
        
        if not os.path.exists(file_path):
            print(f"‚ÄºÔ∏è –ü–æ–º–∏–ª–∫–∞: –§–∞–π–ª '{file_path}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
            return

        model = whisper.load_model("base")
        result = model.transcribe(file_path, language="uk")

        # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç –∑ –ø–æ–¥—ñ–ª–æ–º –Ω–∞ —Å–µ–≥–º–µ–Ω—Ç–∏
        segments = result["segments"]
        text = "\n".join([seg["text"] for seg in segments])

        with open(output_file, "w", encoding="utf-8") as f:
            f.write(text)

        print(f"‚úÖ –†–æ–∑–ø—ñ–∑–Ω–∞–Ω–∏–π —Ç–µ–∫—Å—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É —Ñ–∞–π–ª: {output_file}")
        return text

    except Exception as e:
        print(f"‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    audio_file = r"E:\Python\open\R20230701-101802G.wav"
    transcribed_text = transcribe_audio(audio_file)
    if transcribed_text:
        print("\nüìù –†–æ–∑–ø—ñ–∑–Ω–∞–Ω–∏–π —Ç–µ–∫—Å—Ç:")
        print(transcribed_text)